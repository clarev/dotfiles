""" Default VIM configuration """

" use VIM settings, not vi settings
set nocompatible

" load pathogen
call pathogen#infect()
call pathogen#helptags()

" enable syntax highlighting
syntax on
set tabstop=2
set shiftwidth=2
" insert spaces instead of tabs
set expandtab
" show line numbers
set number
" disable error bell
set visualbell
" share vim clipboard with system
set clipboard=unnamed
" use tabs instead of spaces in makefiles
au BufEnter Makefile set noexpandtab sts=0
au BufEnter makefile set noexpandtab sts=0
" use auto-indentation
filetype plugin indent on
" trim all whitespace on save
autocmd BufWritePre * :%s/\s\+$//e
" set leader to ,
let mapleader = ","
" set minimum number of lines above and below cursor
set scrolloff=5
" turn on incremental searching
set incsearch
" speed up mappings
set ttimeout
set ttimeoutlen=50
" round >> shifting
set shiftround
" display tabs and trailing spaces visually
set list listchars=tab:ˍˍ,trail:ˍ
" always display sign column
autocmd BufEnter * sign define dummy
autocmd BufEnter * execute 'sign place 9999 line=1 name=dummy buffer=' . bufnr('')
" turn off .swp files
set noswapfile
set nobackup
set nowb
" persistent file undo
silent !mkdir ~/.vim/backups > /dev/null 2>&1
set undodir=~/.vim/backups
set undofile

""" Jellybeans.vim Colorscheme """

colorscheme jellybeans
let g:jellybeans_background_color = "151535"
let g:jellybeans_overrides = {
\  'Todo': {
\    'guifg':    'DF4085',
\    'guibg':    '',
\    'ctermfg':  'Red',
\    'ctermbg':  '',
\    'attr':     'bold'
\  },
\}
color jellybeans


""" Configure UI """

" set background defaults
set background=dark
set transparency=3

" configure and color the color column
if exists('+colorcolumn')
  set colorcolumn=80
  hi ColorColumn guibg=#444444
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

" configure and highlight over length
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%>80v.\+/

" highlight and color the current line
set cursorline
highlight CursorLine guibg=#000070

" configure and color the cursor
set guicursor=n-v-c:blinkwait500-blinkoff500-blinkon500
highlight Cursor guibg=#C92765

" sign column highlight should be clear
highlight clear SignColumn

" highlight search matches
set hlsearch


""" Mappings """

" Open current file's directory listing
nnoremap <silent> <D-e> :e `pwd`<cr>zz
" Open working directory listing
nnoremap <silent> <D-d> :Ex<cr>zz
" Clear search highlighs
nnoremap <silent> <D-k> :noh<cr>
" Highlight .. patterns to easily navigate in directory listnings
nnoremap <silent>  /\.\.<cr>
" Reindent current file and return to previous location
nnoremap <D-i> mzgg=G`z<CR>
" Open vertical split window easily
nnoremap <silent> <D-Bar> :wincmd v<cr>
" Navigate split windows easily
nnoremap <silent> <D-S-Left> :wincmd h<cr>
nnoremap <silent> <D-S-Right> :wincmd l<cr>

" Automatically adjust quickfix window height
"   https://gist.github.com/juanpabloaj/5845848
au FileType qf call AdjustWindowHeight(3, 18)
function! AdjustWindowHeight(minheight, maxheight)
  let l = 1
  let n_lines = 0
  let w_width = winwidth(0)
  while l <= line('$')
    " number to float for division
    let l_len = strlen(getline(l)) + 0.0
    let line_width = l_len/w_width
    let n_lines += float2nr(ceil(line_width))
    let l += 1
  endw
  exe max([min([n_lines, a:maxheight]), a:minheight]) . "wincmd _"
endfunction
