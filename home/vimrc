" Default VIM configuration
syntax on
set tabstop=2
set shiftwidth=2
set expandtab
set number
set vb
set clipboard=unnamed
au BufEnter Makefile set noexpandtab sts=0
au BufEnter makefile set noexpandtab sts=0
filetype plugin indent on
autocmd BufWritePre * :%s/\s\+$//e
let mapleader = ","
set cursorline
set hlsearch
call pathogen#infect()

" Jellybeans.vim Colorscheme
colorscheme jellybeans
let g:jellybeans_background_color = "151535"
let g:jellybeans_overrides = {
\  'Todo': {
\    'guifg':    'DF4085',
\    'guibg':    '',
\    'ctermfg':  'Red',
\    'ctermbg':  '',
\    'attr':     'bold'
\  },
\}
color jellybeans

" Configure UI
set background=dark
set transparency=3
set cc=80
hi ColorColumn ctermbg=Black guibg=Black
highlight Cursor guibg=#C92765
set guicursor=n-v-c:blinkwait500-blinkoff500-blinkon500


""" Mappings """

" Open current file's directory listing
nnoremap <silent> <D-Space> :e `pwd`<cr>
" Open working directory listning
nnoremap <silent> <D-d> :Ex<cr>
" Switch between header and source files
nnoremap <silent> <leader>s :FSHere<cr>
" Clear search highlighs
nnoremap <silent> <D-k> :noh<cr>
" Highlight .. patterns to easily navigate in directory listnings
nnoremap <silent>  /\.\.<cr>
" Reindent current file and return to previous location
nnoremap <D-i> mzgg=G`z<CR>


""" Ag Configuration """

" Mapping to easily search via Ag
nnoremap <D-F> :Ag<Space>
" Jump to next item in search
nnoremap <silent> <C-]> :cn<CR>z.
" Jump to next item in search
nnoremap <silent> <C-[> :cp<CR>z.

" Easy Motion
hi EasyMotionTarget ctermbg=DarkMagenta guibg=DarkMagenta ctermfg=white guifg=white

" configure sign column
highlight clear SignColumn
sign define dummy
execute 'sign place 9999 line=1 name=dummy buffer=' . bufnr('')

" YouCompleteMe
"   configure autocompletion keys
let g:ycm_key_list_select_completion = ['<D-]>']
let g:ycm_key_list_previous_completion = ['<D-[>']

" Vim Airline Support
set laststatus=2
set noshowmode
set guifont=Menlo\ for\ Powerline:h13
let g:Powerline_symbols = 'fancy'
let g:airline_symbols = {}
let g:airline_left_sep = '⮀'
let g:airline_left_alt_sep = '⮁'
let g:airline_right_sep = '⮂'
let g:airline_right_alt_sep = '⮃'
let g:airline_symbols.branch = '⭠'
let g:airline_symbols.readonly = '⭤'
let g:airline_symbols.linenr = '⭡'

" CtrlP Options
let g:ctrlp_show_hidden = 1
noremap <silent> <leader>t :CtrlP<cr>
noremap <silent> <D-1> :let g:ctrlp_working_path_mode = 'ra'<cr>
noremap <silent> <D-2> :let g:ctrlp_working_path_mode = 'ca'<cr>
noremap <silent> <D-r> :CtrlPClearCache<cr>
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]((\.(git|hg|svn))|(coverage))$',
  \ 'file': '\v\.(swp|zip|DS_Store|jira-url)$'
  \ }
let g:ctrlp_max_height = 20

" Rainbow Parentheses
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

" vim-easy-align mapping
vnoremap <silent> <Enter> :EasyAlign<cr>

" vim-gitgutter options
let g:gitgutter_eager = 0
let g:gitgutter_enabled = 0
let g:gitgutter_sign_column_always = 1
noremap <silent> <leader>g :GitGutterToggle<cr>

" vim-turbox
let g:no_turbux_mappings = 1
nmap <leader>r <Plug>SendTestToTmux
nmap <leader>R <Plug>SendFocusedTestToTmux

" Automatically adjust quickfix window height
"   https://gist.github.com/juanpabloaj/5845848
au FileType qf call AdjustWindowHeight(3, 18)
function! AdjustWindowHeight(minheight, maxheight)
  let l = 1
  let n_lines = 0
  let w_width = winwidth(0)
  while l <= line('$')
    " number to float for division
    let l_len = strlen(getline(l)) + 0.0
    let line_width = l_len/w_width
    let n_lines += float2nr(ceil(line_width))
    let l += 1
  endw
  exe max([min([n_lines, a:maxheight]), a:minheight]) . "wincmd _"
endfunction

" Syntastic
let g:syntastic_error_symbol='✗'
let g:syntastic_style_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'
let g:syntastic_style_warning_symbol='⚠'

" togglelist.vim
let g:toggle_list_no_mappings = 1
nnoremap <script> <silent> <leader>/ :call ToggleQuickfixList()<CR>

" Turbox configuration
let g:turbux_command_prefix = 'spring'
let g:turbux_command_test_unit = 'testunit'
