""" Default VIM configuration """

" use VIM settings, not vi settings
set nocompatible

" load pathogen
call pathogen#infect()
call pathogen#helptags()

" enable syntax highlighting
syntax on
set tabstop=2
set shiftwidth=2
" insert spaces instead of tabs
set expandtab
" show line numbers
set number
" disable error bell
set visualbell
" share vim clipboard with system
set clipboard=unnamed
" use tabs instead of spaces in makefiles
au BufEnter Makefile set noexpandtab sts=0
au BufEnter makefile set noexpandtab sts=0
" use auto-indentation
filetype plugin indent on
" trim all whitespace on save
autocmd BufWritePre * :%s/\s\+$//e
" set leader to ,
let mapleader = ","
" set minimum number of lines above and below cursor
set scrolloff=5
" turn on incremental searching
set incsearch
" speed up mappings
set ttimeout
set ttimeoutlen=50
" round >> shifting
set shiftround
" display tabs and trailing spaces visually
set list listchars=tab:ˍˍ,trail:ˍ
" always display sign column
autocmd BufEnter * sign define dummy
autocmd BufEnter * execute 'sign place 9999 line=1 name=dummy buffer=' . bufnr('')
" turn off .swp files
set noswapfile
set nobackup
set nowb
" persistent file undo
silent !mkdir ~/.vim/backups > /dev/null 2>&1
set undodir=~/.vim/backups
set undofile
" smoother screen redraw
set ttyfast
" set background defaults
set background=dark
set transparency=3
" highlight search matches
set hlsearch
" disable syntax highlighting past specified column for long lines
set synmaxcol=160


""" Set Missing Filetypes """

au BufRead,BufNewFile gitconfig set filetype=gitconfig


""" Mappings """

" Open base directory in netrw
nnoremap <silent> <leader>- :e `pwd`<cr>zz
" Clear search highlighs
nnoremap <silent> <D-k> :noh<cr>
" Highlight .. patterns to easily navigate in directory listnings
nnoremap <silent>  /\.\.<cr>
" Reindent current file and return to previous location
nnoremap <leader>I mzgg=G`z<CR>
" Open vertical split window easily
nnoremap <silent> <D-S-Up> :wincmd v<cr>
" Rotate split windows easily
nnoremap <silent> <D-S-Down> :wincmd r<cr>
" Navigate split windows easily
nnoremap <silent> <D-S-Left> :wincmd h<cr>
nnoremap <silent> <D-S-Right> :wincmd l<cr>
" Save file as root
noremap <leader>W :w !sudo tee % > /dev/null<cr>
" Delete the next search match
nnoremap <silent> mn :execute "normal! hnd" . strlen(@/) . "l"<cr>
" Quick replace global
nnoremap <leader>C :%s//
" Quick replace after cursor
nnoremap <leader>c :.,$s//
" Break long string before 80
nnoremap <leader>b 77<Bar>i''<Esc>i<Return><Esc>kA\<Esc>j

""" Leader WASD Mappings """

" Move line up
nnoremap <leader>w ddkP
" Move line down
nnoremap <leader>s ddp
" Move word under cursor one word left
nnoremap <leader>a "_yiw?\w\+\_W\+\%#<CR>:s/\(\%#\w\+\)\(\_W\+\)\(\w\+\)/\3\2\1/<CR><c-o><c-l> :noh<cr>
" Move word under cursor one word right
nnoremap <leader>d "_yiw:s/\(\%#\w\+\)\(\_W\+\)\(\w\+\)/\3\2\1/<CR><c-o>/\w\+\_W\+<CR><c-l> :noh<cr>

" Automatically adjust quickfix window height
"   https://gist.github.com/juanpabloaj/5845848
au FileType qf call AdjustWindowHeight(3, 18)
function! AdjustWindowHeight(minheight, maxheight)
  let l = 1
  let n_lines = 0
  let w_width = winwidth(0)
  while l <= line('$')
    " number to float for division
    let l_len = strlen(getline(l)) + 0.0
    let line_width = l_len/w_width
    let n_lines += float2nr(ceil(line_width))
    let l += 1
  endw
  exe max([min([n_lines, a:maxheight]), a:minheight]) . "wincmd _"
endfunction

" Automatically close QuickFix window
aug QFClose
  au!
  au WinEnter * if winnr('$') == 1 && getbufvar(winbufnr(winnr()), "&buftype") == "quickfix"|q|endif
aug END
